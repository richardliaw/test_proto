// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: addressbook.capnp

#include "addressbook.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<95> b_f104d3601eed609e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    158,  96, 237,  30,  96, 211,   4, 241,
     18,   0,   0,   0,   1,   0,   1,   0,
     73, 148, 229, 144, 133, 227, 177, 252,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     81, 193, 136,  82,  28,  80, 218, 230,
      1,   0,   0,   0,  98,   0,   0,   0,
     80, 104, 111, 110, 101,  78, 117, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    144,  74,  58, 215, 127,  63, 183, 204,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109,  97, 105, 108,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 104, 111, 110, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81, 193, 136,  82,  28,  80, 218, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f104d3601eed609e = b_f104d3601eed609e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f104d3601eed609e[] = {
  &s_ccb73f7fd73a4a90,
  &s_e6da501c5288c151,
};
static const uint16_t m_f104d3601eed609e[] = {2, 4, 0, 1, 3};
static const uint16_t i_f104d3601eed609e[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_f104d3601eed609e = {
  0xf104d3601eed609e, b_f104d3601eed609e.words, 95, d_f104d3601eed609e, m_f104d3601eed609e,
  2, 5, i_f104d3601eed609e, nullptr, nullptr, { &s_f104d3601eed609e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_e6da501c5288c151 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     81, 193, 136,  82,  28,  80, 218, 230,
     25,   0,   0,   0,   1,   0,   1,   0,
    158,  96, 237,  30,  96, 211,   4, 241,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46,  80, 104, 111, 110, 101,  78, 117,
    109,  98, 101, 114,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    208, 100, 216,  14,  58, 242, 185, 168,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    208, 100, 216,  14,  58, 242, 185, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e6da501c5288c151 = b_e6da501c5288c151.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e6da501c5288c151[] = {
  &s_a8b9f23a0ed864d0,
};
static const uint16_t m_e6da501c5288c151[] = {0, 1};
static const uint16_t i_e6da501c5288c151[] = {0, 1};
const ::capnp::_::RawSchema s_e6da501c5288c151 = {
  0xe6da501c5288c151, b_e6da501c5288c151.words, 52, d_e6da501c5288c151, m_e6da501c5288c151,
  1, 2, i_e6da501c5288c151, nullptr, nullptr, { &s_e6da501c5288c151, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_a8b9f23a0ed864d0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 100, 216,  14,  58, 242, 185, 168,
     37,   0,   0,   0,   2,   0,   0,   0,
     81, 193, 136,  82,  28,  80, 218, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46,  80, 104, 111, 110, 101,  78, 117,
    109,  98, 101, 114,  46,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111,  98, 105, 108, 101,   0,   0,
    104, 111, 109, 101,   0,   0,   0,   0,
    119, 111, 114, 107,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8b9f23a0ed864d0 = b_a8b9f23a0ed864d0.words;
#if !CAPNP_LITE
static const uint16_t m_a8b9f23a0ed864d0[] = {1, 0, 2};
const ::capnp::_::RawSchema s_a8b9f23a0ed864d0 = {
  0xa8b9f23a0ed864d0, b_a8b9f23a0ed864d0.words, 32, nullptr, m_a8b9f23a0ed864d0,
  0, 3, nullptr, nullptr, nullptr, { &s_a8b9f23a0ed864d0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_a8b9f23a0ed864d0, a8b9f23a0ed864d0);
static const ::capnp::_::AlignedData<81> b_ccb73f7fd73a4a90 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144,  74,  58, 215, 127,  63, 183, 204,
     25,   0,   0,   0,   1,   0,   1,   0,
    158,  96, 237,  30,  96, 211,   4, 241,
      4,   0,   7,   0,   1,   0,   4,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46, 101, 109, 112, 108, 111, 121, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 101, 109, 112, 108, 111, 121,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 111, 111, 108,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 108, 102,  69, 109, 112, 108,
    111, 121, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ccb73f7fd73a4a90 = b_ccb73f7fd73a4a90.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ccb73f7fd73a4a90[] = {
  &s_f104d3601eed609e,
};
static const uint16_t m_ccb73f7fd73a4a90[] = {1, 2, 3, 0};
static const uint16_t i_ccb73f7fd73a4a90[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_ccb73f7fd73a4a90 = {
  0xccb73f7fd73a4a90, b_ccb73f7fd73a4a90.words, 81, d_ccb73f7fd73a4a90, m_ccb73f7fd73a4a90,
  1, 4, i_ccb73f7fd73a4a90, nullptr, nullptr, { &s_ccb73f7fd73a4a90, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_85675de833e1a15d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 161, 225,  51, 232,  93, 103, 133,
     18,   0,   0,   0,   1,   0,   0,   0,
     73, 148, 229, 144, 133, 227, 177, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  65, 100, 100, 114, 101, 115,
    115,  66, 111, 111, 107,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112, 101, 111, 112, 108, 101,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    158,  96, 237,  30,  96, 211,   4, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_85675de833e1a15d = b_85675de833e1a15d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_85675de833e1a15d[] = {
  &s_f104d3601eed609e,
};
static const uint16_t m_85675de833e1a15d[] = {0};
static const uint16_t i_85675de833e1a15d[] = {0};
const ::capnp::_::RawSchema s_85675de833e1a15d = {
  0x85675de833e1a15d, b_85675de833e1a15d.words, 37, d_85675de833e1a15d, m_85675de833e1a15d,
  1, 1, i_85675de833e1a15d, nullptr, nullptr, { &s_85675de833e1a15d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Person
#ifndef _MSC_VER
constexpr uint16_t Person::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Person::PhoneNumber
#ifndef _MSC_VER
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::PhoneNumber::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::PhoneNumber::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::PhoneNumber::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Person::Employment
#ifndef _MSC_VER
constexpr uint16_t Person::Employment::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::Employment::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::Employment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::Employment::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::Employment::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// AddressBook
#ifndef _MSC_VER
constexpr uint16_t AddressBook::_capnpPrivate::dataWordSize;
constexpr uint16_t AddressBook::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind AddressBook::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AddressBook::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* AddressBook::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



